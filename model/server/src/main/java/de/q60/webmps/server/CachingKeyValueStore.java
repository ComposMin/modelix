package de.q60.webmps.server;

/*Generated by MPS */

import org.apache.commons.collections4.map.LRUMap;

import java.util.Map;
import java.util.Objects;
import java.util.UUID;

public class CachingKeyValueStore implements IKeyValueStore {
  private static final String NULL_STRING = UUID.randomUUID().toString();

  private IKeyValueStore store;
  private Map<String, String> cache = new LRUMap<String, String>(1000);

  public CachingKeyValueStore(IKeyValueStore store) {
    this.store = store;
  }

  @Override
  public String get(String key) {
    if (allowCaching(key)) {
      String value = cache.get(key);
      if (value == null) {
        value = store.get(key);
        cache.put(key, value);
      }
      return (value == CachingKeyValueStore.NULL_STRING ? null : value);
    } else {
      return store.get(key);
    }
  }

  @Override
  public void put(String key, String value) {
    if (allowCaching(key)) {
      String existingValue = cache.get(key);
      if (Objects.equals(existingValue, value)) {
        return;
      }
      cache.put(key, value);
    }
    store.put(key, value);
  }

  @Override
  public void listen(final String key, final IKeyListener listener) {
    store.listen(key, listener);
  }

  protected boolean allowCaching(String key) {
    return true;
  }

}
